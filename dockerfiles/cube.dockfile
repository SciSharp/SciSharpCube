# stage 1: build
FROM mcr.microsoft.com/dotnet/core/sdk
WORKDIR /scisharp
COPY . .

# stage 2: debian setup
RUN apt-get update -y
RUN apt-get upgrade -y 
RUN apt-get install python3 -y
RUN apt-get install python3-pip -y
RUN apt-get install wget -y

# stage 3: install Jupyter Notebook
RUN pip3 install --upgrade pip
RUN pip3 install jupyter


# stage 4: install ICSharpCore
RUN dotnet tool install ICSharpCore --version 0.2.4 --global
ENV PATH="/root/.dotnet/tools:${PATH}"
RUN mkdir kernel-spec
WORKDIR kernel-spec
RUN wget https://raw.githubusercontent.com/SciSharp/ICSharpCore/master/kernel-spec/kernel-docker.json
RUN mv kernel-docker.json kernel.json
RUN wget https://raw.githubusercontent.com/SciSharp/ICSharpCore/master/kernel-spec/logo-32x32.png
RUN wget https://raw.githubusercontent.com/SciSharp/ICSharpCore/master/kernel-spec/logo-64x64.png

RUN jupyter kernelspec install /scisharp/kernel-spec --name=csharpcore

# stage 5: copy libraries
WORKDIR /scisharp/lib
RUN wget https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-2.3.0.tar.gz
RUN tar -C /usr/local -xzf libtensorflow-cpu-linux-x86_64-2.3.0.tar.gz
RUN rm libtensorflow-cpu-linux-x86_64-2.3.0.tar.gz
RUN ldconfig

WORKDIR /scisharp/src/InlineRefs
RUN dotnet restore
WORKDIR /scisharp
RUN rm -rf /scisharp/src

# stage 6: start jupyter in home directory
WORKDIR /scisharp/home

EXPOSE 8888
CMD ["jupyter", "notebook", "--port=8888", "--no-browser", "--ip=0.0.0.0", "--allow-root"]